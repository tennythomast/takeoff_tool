# Generated by Django 4.2.23 on 2025-07-28 04:42

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContextEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('organization_id', models.UUIDField(db_index=True)),
                ('role', models.CharField(choices=[('user', 'User'), ('assistant', 'Assistant'), ('system', 'System'), ('agent', 'Agent'), ('workflow', 'Workflow'), ('tool', 'Tool'), ('function', 'Function')], max_length=20)),
                ('content', models.TextField()),
                ('content_type', models.CharField(default='text', help_text="Content type: 'text', 'json', 'code', 'image_url', 'tool_result', etc.", max_length=50)),
                ('structured_data', models.JSONField(blank=True, default=dict, help_text='Structured data for agents/workflows (tool calls, function results, etc.)')),
                ('source_entity_id', models.UUIDField(blank=True, db_index=True, null=True)),
                ('source_entity_type', models.CharField(blank=True, help_text="Source type: 'prompt', 'agent_action', 'workflow_step', 'tool_execution', etc.", max_length=50)),
                ('vector_id', models.CharField(blank=True, max_length=255, null=True)),
                ('embedding_model', models.CharField(blank=True, max_length=100, null=True)),
                ('model_used', models.CharField(blank=True, max_length=100, null=True)),
                ('context_strategy', models.CharField(choices=[('full_context', 'Full Context'), ('adaptive_summary', 'Adaptive Summary'), ('smart_summary', 'Smart Summary'), ('cached_context', 'Cached Context'), ('incremental_summary', 'Incremental Summary')], max_length=30, null=True)),
                ('context_tokens_used', models.IntegerField(blank=True, null=True)),
                ('total_cost', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('context_preparation_cost', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('embedding_cost', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('importance_score', models.FloatField(default=1.0)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('is_starred', models.BooleanField(default=False)),
                ('execution_metadata', models.JSONField(blank=True, default=dict, help_text='Execution details for agents/workflows (tools used, reasoning steps, etc.)')),
                ('parent_entry_id', models.UUIDField(blank=True, help_text='For threaded conversations or workflow step dependencies', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'context_entries',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContextSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('organization_id', models.UUIDField(db_index=True)),
                ('session_type', models.CharField(choices=[('chat', 'Chat Session'), ('agent', 'Agent Session'), ('workflow', 'Workflow Session'), ('custom', 'Custom Session')], max_length=20)),
                ('entity_id', models.UUIDField(db_index=True)),
                ('entity_type', models.CharField(db_index=True, help_text="Entity type: 'prompt_session', 'agent_session', 'workflow_execution', etc.", max_length=50)),
                ('tier', models.CharField(choices=[('starter', 'Starter'), ('pro', 'Pro'), ('team', 'Team'), ('enterprise', 'Enterprise')], default='starter', max_length=20)),
                ('last_summarized_at', models.DateTimeField(blank=True, null=True)),
                ('summary_version', models.IntegerField(default=0)),
                ('context_window_preferences', models.JSONField(blank=True, default=dict)),
                ('total_context_preparation_cost', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('total_summarization_cost', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('total_embedding_cost', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('cache_hit_rate', models.FloatField(default=0.0)),
                ('avg_preparation_time_ms', models.FloatField(default=0.0)),
                ('total_context_requests', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'context_sessions',
            },
        ),
        migrations.CreateModel(
            name='MemoryCleanupPolicy',
            fields=[
                ('organization_id', models.UUIDField(primary_key=True, serialize=False)),
                ('tier', models.CharField(choices=[('starter', 'Starter'), ('pro', 'Pro'), ('team', 'Team'), ('enterprise', 'Enterprise')], max_length=20)),
                ('chat_session_retention_days', models.IntegerField(default=7)),
                ('agent_session_retention_days', models.IntegerField(default=14)),
                ('workflow_session_retention_days', models.IntegerField(default=30)),
                ('summary_cache_retention_days', models.IntegerField(default=7)),
                ('max_context_cost_per_day', models.DecimalField(decimal_places=6, default=Decimal('1.00'), max_digits=10)),
                ('max_summarization_cost_per_day', models.DecimalField(decimal_places=6, default=Decimal('0.50'), max_digits=10)),
                ('max_embedding_cost_per_day', models.DecimalField(decimal_places=6, default=Decimal('0.25'), max_digits=10)),
                ('importance_threshold', models.FloatField(default=0.5)),
                ('preserve_starred_content', models.BooleanField(default=False)),
                ('preserve_high_confidence_responses', models.BooleanField(default=True)),
                ('preserve_agent_reasoning', models.BooleanField(default=True)),
                ('preserve_workflow_state', models.BooleanField(default=True)),
                ('preserve_tool_results', models.BooleanField(default=False)),
                ('custom_retention_rules', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'memory_cleanup_policies',
            },
        ),
        migrations.CreateModel(
            name='MemoryUsageStats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('organization_id', models.UUIDField(db_index=True)),
                ('chat_entries_count', models.IntegerField(default=0)),
                ('agent_entries_count', models.IntegerField(default=0)),
                ('workflow_entries_count', models.IntegerField(default=0)),
                ('total_entries', models.IntegerField(default=0)),
                ('summarization_events_count', models.IntegerField(default=0)),
                ('embedding_events_count', models.IntegerField(default=0)),
                ('context_preparation_count', models.IntegerField(default=0)),
                ('total_context_cost', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('total_summarization_cost', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('total_embedding_cost', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('cache_hit_rate', models.FloatField(default=0.0)),
                ('average_context_preparation_time_ms', models.FloatField(default=0.0)),
                ('average_summarization_time_ms', models.FloatField(default=0.0)),
                ('large_model_usage_count', models.IntegerField(default=0)),
                ('medium_model_usage_count', models.IntegerField(default=0)),
                ('small_model_usage_count', models.IntegerField(default=0)),
                ('full_context_usage_count', models.IntegerField(default=0)),
                ('smart_summary_usage_count', models.IntegerField(default=0)),
                ('cached_context_usage_count', models.IntegerField(default=0)),
                ('adaptive_summary_usage_count', models.IntegerField(default=0)),
                ('average_information_preservation', models.FloatField(default=0.0)),
                ('average_user_satisfaction', models.FloatField(blank=True, null=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_stats', to='context_manager.contextsession')),
            ],
            options={
                'db_table': 'memory_usage_stats',
            },
        ),
        migrations.CreateModel(
            name='ContextTransition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('organization_id', models.UUIDField(db_index=True)),
                ('from_model', models.CharField(blank=True, max_length=100, null=True)),
                ('to_model', models.CharField(max_length=100)),
                ('from_context_strategy', models.CharField(blank=True, max_length=30, null=True)),
                ('to_context_strategy', models.CharField(max_length=30)),
                ('transition_type', models.CharField(choices=[('cost_optimization', 'Cost Optimization'), ('quality_upgrade', 'Quality Upgrade'), ('context_window_constraint', 'Context Window Constraint'), ('model_switch', 'Model Switch'), ('domain_transition', 'Domain Transition'), ('user_preference', 'User Preference')], max_length=30)),
                ('context_tokens_used', models.IntegerField()),
                ('context_utilization_percentage', models.FloatField()),
                ('preparation_cost', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('cost_savings', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('preparation_time_ms', models.IntegerField()),
                ('latency_impact_ms', models.IntegerField(default=0)),
                ('information_preservation_score', models.FloatField(blank=True, null=True)),
                ('user_satisfaction_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transitions', to='context_manager.contextsession')),
            ],
            options={
                'db_table': 'context_transitions',
            },
        ),
        migrations.CreateModel(
            name='ContextSummaryCache',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('organization_id', models.UUIDField(db_index=True)),
                ('conversation_signature', models.CharField(max_length=64)),
                ('summary_type', models.CharField(choices=[('conversation', 'Conversation Summary'), ('agent_reasoning', 'Agent Reasoning Summary'), ('workflow_state', 'Workflow State Summary'), ('tool_usage', 'Tool Usage Summary')], default='conversation', max_length=30)),
                ('target_tokens', models.IntegerField()),
                ('target_context_window', models.IntegerField()),
                ('model_family', models.CharField(blank=True, max_length=50)),
                ('summary_content', models.TextField()),
                ('conversation_length', models.IntegerField()),
                ('generation_cost', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('model_used_for_summary', models.CharField(max_length=100)),
                ('generation_time_ms', models.IntegerField(blank=True, null=True)),
                ('compression_ratio', models.FloatField(blank=True, null=True)),
                ('information_preservation_score', models.FloatField(blank=True, null=True)),
                ('access_count', models.IntegerField(default=0)),
                ('last_used_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='summary_cache', to='context_manager.contextsession')),
            ],
            options={
                'db_table': 'context_summary_cache',
            },
        ),
        migrations.AddIndex(
            model_name='contextsession',
            index=models.Index(fields=['organization_id', 'session_type', 'last_activity_at'], name='context_ses_organiz_ab13ea_idx'),
        ),
        migrations.AddIndex(
            model_name='contextsession',
            index=models.Index(fields=['entity_id', 'entity_type'], name='context_ses_entity__0eadc9_idx'),
        ),
        migrations.AddIndex(
            model_name='contextsession',
            index=models.Index(fields=['organization_id', 'tier', 'expires_at'], name='context_ses_organiz_b6932a_idx'),
        ),
        migrations.AddIndex(
            model_name='contextsession',
            index=models.Index(fields=['last_summarized_at', 'summary_version'], name='context_ses_last_su_038f8f_idx'),
        ),
        migrations.AddIndex(
            model_name='contextsession',
            index=models.Index(fields=['organization_id', 'total_context_preparation_cost'], name='context_ses_organiz_7d35f4_idx'),
        ),
        migrations.AddConstraint(
            model_name='contextsession',
            constraint=models.UniqueConstraint(fields=('entity_id', 'entity_type'), name='unique_entity_context_session'),
        ),
        migrations.AddField(
            model_name='contextentry',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='context_manager.contextsession'),
        ),
        migrations.AddIndex(
            model_name='memoryusagestats',
            index=models.Index(fields=['organization_id', 'date'], name='memory_usag_organiz_57efc7_idx'),
        ),
        migrations.AddIndex(
            model_name='memoryusagestats',
            index=models.Index(fields=['session', 'date'], name='memory_usag_session_167d1e_idx'),
        ),
        migrations.AddIndex(
            model_name='memoryusagestats',
            index=models.Index(fields=['organization_id', 'total_context_cost', 'date'], name='memory_usag_organiz_fba59e_idx'),
        ),
        migrations.AddIndex(
            model_name='memoryusagestats',
            index=models.Index(fields=['date', 'cache_hit_rate'], name='memory_usag_date_734e5d_idx'),
        ),
        migrations.AddConstraint(
            model_name='memoryusagestats',
            constraint=models.UniqueConstraint(fields=('organization_id', 'session', 'date'), name='unique_daily_usage_stats'),
        ),
        migrations.AddIndex(
            model_name='contexttransition',
            index=models.Index(fields=['organization_id', 'session', 'created_at'], name='context_tra_organiz_d01bf5_idx'),
        ),
        migrations.AddIndex(
            model_name='contexttransition',
            index=models.Index(fields=['organization_id', 'transition_type', 'created_at'], name='context_tra_organiz_06a51a_idx'),
        ),
        migrations.AddIndex(
            model_name='contexttransition',
            index=models.Index(fields=['organization_id', 'preparation_cost', 'created_at'], name='context_tra_organiz_6c0f54_idx'),
        ),
        migrations.AddIndex(
            model_name='contexttransition',
            index=models.Index(fields=['to_model', 'to_context_strategy'], name='context_tra_to_mode_aefb50_idx'),
        ),
        migrations.AddIndex(
            model_name='contexttransition',
            index=models.Index(fields=['cost_savings', 'preparation_time_ms'], name='context_tra_cost_sa_a5ff2b_idx'),
        ),
        migrations.AddIndex(
            model_name='contextsummarycache',
            index=models.Index(fields=['session', 'conversation_signature', 'target_tokens'], name='context_sum_session_92c216_idx'),
        ),
        migrations.AddIndex(
            model_name='contextsummarycache',
            index=models.Index(fields=['organization_id', 'summary_type', 'created_at'], name='context_sum_organiz_cdeacd_idx'),
        ),
        migrations.AddIndex(
            model_name='contextsummarycache',
            index=models.Index(fields=['last_used_at', 'access_count'], name='context_sum_last_us_d04005_idx'),
        ),
        migrations.AddIndex(
            model_name='contextsummarycache',
            index=models.Index(fields=['model_family', 'target_context_window'], name='context_sum_model_f_c70792_idx'),
        ),
        migrations.AddIndex(
            model_name='contextsummarycache',
            index=models.Index(fields=['expires_at'], name='context_sum_expires_472154_idx'),
        ),
        migrations.AddConstraint(
            model_name='contextsummarycache',
            constraint=models.UniqueConstraint(fields=('session', 'conversation_signature', 'target_tokens', 'summary_type'), name='unique_summary_cache_entry'),
        ),
        migrations.AddIndex(
            model_name='contextentry',
            index=models.Index(fields=['organization_id', 'session', 'created_at'], name='context_ent_organiz_9a907f_idx'),
        ),
        migrations.AddIndex(
            model_name='contextentry',
            index=models.Index(fields=['session', 'role', 'created_at'], name='context_ent_session_ab77f2_idx'),
        ),
        migrations.AddIndex(
            model_name='contextentry',
            index=models.Index(fields=['source_entity_id', 'source_entity_type'], name='context_ent_source__afd766_idx'),
        ),
        migrations.AddIndex(
            model_name='contextentry',
            index=models.Index(fields=['organization_id', 'importance_score'], name='context_ent_organiz_354343_idx'),
        ),
        migrations.AddIndex(
            model_name='contextentry',
            index=models.Index(fields=['organization_id', 'total_cost', 'created_at'], name='context_ent_organiz_b654d2_idx'),
        ),
        migrations.AddIndex(
            model_name='contextentry',
            index=models.Index(fields=['content_type', 'role'], name='context_ent_content_063e00_idx'),
        ),
        migrations.AddIndex(
            model_name='contextentry',
            index=models.Index(fields=['parent_entry_id'], name='context_ent_parent__a15bef_idx'),
        ),
        migrations.AddIndex(
            model_name='contextentry',
            index=models.Index(fields=['vector_id'], name='context_ent_vector__88a0cc_idx'),
        ),
    ]
