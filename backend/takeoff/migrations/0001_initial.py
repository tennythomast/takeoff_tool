# Generated by Django 4.2.25 on 2025-10-26 04:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_remove_membership_core_member_user_id_5b6d13_idx_and_more'),
        ('rag_service', '0004_documentpage'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Drawing',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Designates whether this record should be treated as active. Unselect this instead of deleting.', verbose_name='active')),
                ('deactivated_at', models.DateTimeField(blank=True, null=True, verbose_name='deactivated at')),
                ('client', models.CharField(db_index=True, max_length=255)),
                ('project', models.CharField(db_index=True, max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('drawing_number', models.CharField(db_index=True, max_length=100)),
                ('drawing_title', models.CharField(max_length=500)),
                ('date', models.DateField()),
                ('revision', models.CharField(blank=True, max_length=50)),
                ('scale', models.CharField(blank=True, max_length=50)),
                ('page_count', models.IntegerField(default=1)),
                ('file_path', models.CharField(blank=True, max_length=1000)),
                ('file_size', models.BigIntegerField(default=0)),
                ('file_type', models.CharField(default='pdf', max_length=50)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_drawings', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drawings', to='core.organization')),
                ('rag_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drawings', to='rag_service.document')),
            ],
            options={
                'verbose_name': 'Drawing',
                'verbose_name_plural': 'Drawings',
                'db_table': 'takeoff_drawing',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TakeoffExtraction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Designates whether this record should be treated as active. Unselect this instead of deleting.', verbose_name='active')),
                ('deactivated_at', models.DateTimeField(blank=True, null=True, verbose_name='deactivated at')),
                ('extraction_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('verified', 'Verified')], db_index=True, default='pending', max_length=20)),
                ('extraction_method', models.CharField(choices=[('manual', 'Manual Entry'), ('rule_based', 'Rule-based Extraction'), ('ai_assisted', 'AI-assisted Extraction'), ('imported', 'Imported from External Source')], db_index=True, default='rule_based', max_length=20)),
                ('processing_time_ms', models.IntegerField(default=0)),
                ('processing_error', models.TextField(blank=True)),
                ('extraction_cost_usd', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('confidence_score', models.FloatField(default=0.0, help_text='Overall confidence score for the extraction (0-1)')),
                ('verified', models.BooleanField(default=False, help_text='Whether this extraction has been verified by a user')),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('elements', models.JSONField(default=dict, help_text='Flexible JSON structure containing all extracted takeoff elements')),
                ('element_count', models.IntegerField(default=0)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_extractions', to=settings.AUTH_USER_MODEL)),
                ('drawing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extractions', to='takeoff.drawing')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_extractions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Takeoff Extraction',
                'verbose_name_plural': 'Takeoff Extractions',
                'db_table': 'takeoff_extraction',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TakeoffElement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Designates whether this record should be treated as active. Unselect this instead of deleting.', verbose_name='active')),
                ('deactivated_at', models.DateTimeField(blank=True, null=True, verbose_name='deactivated at')),
                ('element_id', models.CharField(db_index=True, max_length=100)),
                ('element_type', models.CharField(db_index=True, max_length=100)),
                ('specifications', models.JSONField(default=dict)),
                ('location', models.JSONField(blank=True, default=dict)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('drawing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='takeoff.drawing')),
                ('extraction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='element_items', to='takeoff.takeoffextraction')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_elements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Takeoff Element',
                'verbose_name_plural': 'Takeoff Elements',
                'db_table': 'takeoff_element',
                'ordering': ['drawing', 'element_type', 'element_id'],
            },
        ),
        migrations.CreateModel(
            name='TakeoffProject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Designates whether this record should be treated as active. Unselect this instead of deleting.', verbose_name='active')),
                ('deactivated_at', models.DateTimeField(blank=True, null=True, verbose_name='deactivated at')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('client', models.CharField(db_index=True, max_length=255)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('in_progress', 'In Progress'), ('review', 'Under Review'), ('completed', 'Completed'), ('archived', 'Archived')], db_index=True, default='planning', max_length=20)),
                ('drawing_count', models.IntegerField(default=0)),
                ('extraction_count', models.IntegerField(default=0)),
                ('verified_extraction_count', models.IntegerField(default=0)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_takeoff_projects', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='takeoff_projects', to='core.organization')),
            ],
            options={
                'verbose_name': 'Takeoff Project',
                'verbose_name_plural': 'Takeoff Projects',
                'db_table': 'takeoff_project',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['organization', 'is_active'], name='takeoff_pro_organiz_0f43ca_idx'), models.Index(fields=['status'], name='takeoff_pro_status_151ac9_idx'), models.Index(fields=['client'], name='takeoff_pro_client_944eeb_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='takeoffextraction',
            index=models.Index(fields=['drawing', 'is_active'], name='takeoff_ext_drawing_53c798_idx'),
        ),
        migrations.AddIndex(
            model_name='takeoffextraction',
            index=models.Index(fields=['status', 'extraction_method'], name='takeoff_ext_status_702cf6_idx'),
        ),
        migrations.AddIndex(
            model_name='takeoffextraction',
            index=models.Index(fields=['verified'], name='takeoff_ext_verifie_b34752_idx'),
        ),
        migrations.AddIndex(
            model_name='takeoffelement',
            index=models.Index(fields=['drawing', 'element_type'], name='takeoff_ele_drawing_d6854e_idx'),
        ),
        migrations.AddIndex(
            model_name='takeoffelement',
            index=models.Index(fields=['element_id'], name='takeoff_ele_element_856187_idx'),
        ),
        migrations.AddIndex(
            model_name='takeoffelement',
            index=models.Index(fields=['verified'], name='takeoff_ele_verifie_5d37cf_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='takeoffelement',
            unique_together={('drawing', 'element_id')},
        ),
        migrations.AddIndex(
            model_name='drawing',
            index=models.Index(fields=['organization', 'is_active'], name='takeoff_dra_organiz_c41a8c_idx'),
        ),
        migrations.AddIndex(
            model_name='drawing',
            index=models.Index(fields=['client', 'project'], name='takeoff_dra_client_8fd663_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='drawing',
            unique_together={('organization', 'drawing_number')},
        ),
    ]
